{"name": "test_update_with_existing_email", "status": "broken", "statusDetails": {"message": "Exception: Login failed: {\"success\":false,\"message\":\"email or password are incorrect\"}", "trace": "self = <tests.test_changing_user_data.TestUserProfile object at 0x0000020B740761E0>, user_fixture = {'email': 'kiowerwz@yandex.ru', 'name': 'lzwfrnhf', 'password': 'uanshyet'}\n\n    @allure.step(\"Тест обновления информации с уже существующим email\")\n    def test_update_with_existing_email(self,user_fixture):\n        payload = user_fixture\n>       token = self.login_user.get_token(payload[\"email\"], payload[\"password\"])\n\ntests\\test_changing_user_data.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <methods.login_user_methods.LoginUser object at 0x0000020B74074290>, email = 'kiowerwz@yandex.ru', password = 'uanshyet'\n\n    @allure.step(\"Получение токена пользователя\")\n    def get_token(self, email, password):\n    \n        payload = {\n            \"email\": email,\n            \"password\": password\n        }\n        response = requests.post(LOGIN_URL, json=payload)\n    \n        if response.status_code == 200:\n            return response.json().get('accessToken')\n        else:\n>           raise Exception(\"Login failed: \" + response.text)\nE           Exception: Login failed: {\"success\":false,\"message\":\"email or password are incorrect\"}\n\nmethods\\login_user_methods.py:33: Exception"}, "description": "Тесты для управления профилями пользователей, включая создание, получение и обновление.", "steps": [{"name": "Тест обновления информации с уже существующим email", "status": "broken", "statusDetails": {"message": "Exception: Login failed: {\"success\":false,\"message\":\"email or password are incorrect\"}\n", "trace": "  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\ЯП Тестирование\\Диплом автоматизатор\\Diplom_Diana_Atroshko_12\\Diplom\\Diplom_2\\tests\\test_changing_user_data.py\", line 58, in test_update_with_existing_email\n    token = self.login_user.get_token(payload[\"email\"], payload[\"password\"])\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\ЯП Тестирование\\Диплом автоматизатор\\Diplom_Diana_Atroshko_12\\Diplom\\Diplom_2\\methods\\login_user_methods.py\", line 33, in get_token\n    raise Exception(\"Login failed: \" + response.text)\n"}, "steps": [{"name": "Получение токена пользователя", "status": "broken", "statusDetails": {"message": "Exception: Login failed: {\"success\":false,\"message\":\"email or password are incorrect\"}\n", "trace": "  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\ЯП Тестирование\\Диплом автоматизатор\\Diplom_Diana_Atroshko_12\\Diplom\\Diplom_2\\methods\\login_user_methods.py\", line 33, in get_token\n    raise Exception(\"Login failed: \" + response.text)\n"}, "parameters": [{"name": "email", "value": "'kiowerwz@yandex.ru'"}, {"name": "password", "value": "'uanshyet'"}], "start": 1735420130656, "stop": 1735420130989}], "parameters": [{"name": "user_fixture", "value": "{'email': 'kiowerwz@yandex.ru', 'password': 'uanshyet', 'name': 'lzwfrnhf'}"}], "start": 1735420130655, "stop": 1735420130990}], "start": 1735420130655, "stop": 1735420130992, "uuid": "6b8128c1-1cf5-4906-ad9e-804b9182e001", "historyId": "72ebc3ce8dab0df0b9692dbca88d88e1", "testCaseId": "72ebc3ce8dab0df0b9692dbca88d88e1", "fullName": "tests.test_changing_user_data.TestUserProfile#test_update_with_existing_email", "labels": [{"name": "epic", "value": "Управление профилем пользователя"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_changing_user_data"}, {"name": "subSuite", "value": "TestUserProfile"}, {"name": "host", "value": "WIN-EKB0MMLGAJ0"}, {"name": "thread", "value": "17128-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_changing_user_data"}]}